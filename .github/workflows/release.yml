name: release
on:
  push:
    tags:
      - '*'
jobs:
  stage1:
    name: Stage 1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "tag=ghcr.io/toltec-dev/toolchain:$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and puch toolchain
        uses: docker/build-push-action@v5
        with:
          context: toolchain/
          push: true
          tags: ${{ env.tag }}
          cache_from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
  stage2:
    name: Stage 2
    runs-on: ubuntu-latest
    needs: stage1
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "tag=ghcr.io/toltec-dev/base:$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and puch toolchain
        uses: docker/build-push-action@v5
        with:
          context: toolchain/
          push: true
          tags: ${{ env.tag }}
          cache_from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            FROM=ghcr.io/toltec-dev/toolchain
  stage3:
    name: Stage 3
    runs-on: ubuntu-latest
    needs: stage2
    strategy:
      matrix:
        from: [ghcr.io/toltec-dev/base]
        target: [golang, python, qt, rust]
        include:
          - from: ghcr.io/toltec-dev/toolchain
          - target: dotnet6
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "tag=ghcr.io/toltec-dev/${{ matrix.target }}:$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and puch toolchain
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.target }}/
          push: true
          tags: ${{ env.tag }}
          cache_from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            FROM=${{ matrix.from }}

