name: release
on:
  push:
    tags:
      - '*'
jobs:
  stage1:
    name: Stage 1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "version=$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push toolchain
        run: ./scripts/build -p -g -s toolchain -v ${{ tag.version }}
  stage2:
    name: Stage 2
    runs-on: ubuntu-latest
    needs: stage1
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "version=$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push toolchain
        run: ./scripts/build -p -g -s base -v ${{ tag.version }}
  stage3:
    name: Stage 3
    runs-on: ubuntu-latest
    needs: stage2
    strategy:
      matrix:
        target: [golang, python, qt, rust, dotnet6]
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up version
        run: |
          VERSION="$(echo "${{ github.ref }}" | cut -d / -f 3)"
          echo "version=$VERSION" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push toolchain
        run: ./scripts/build -p -g -s ${{ matrix.target }} -v ${{ tag.version }}
